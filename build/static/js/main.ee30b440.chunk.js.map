{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholde","defaultValue","Component","NotFound","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","placeholder","EditFishForm","handleChange","event","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","syncState","removeBinding","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ee30b440.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  myInput = React.createRef();\n\n  goToStore = e => {\n    // Stop the form from submitting\n    e.preventDefault();\n    //  get the text from that input\n    const storeName = this.myInput.current.value;\n    // change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholde=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store -></button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react'\n\nconst NotFound = () =>{\n    return(\n    <div>\n        <h2>Not Found</h2>\n    </div>\n    )\n}\n\nexport default NotFound","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// const Header = (tagline, age) =>\n// ................OR................\nconst Header = props => (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">Of</span>\n          <span className=\"the\">The</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        {/* <span>{tagline} {age} </span> */}\n        {/* ................OR..................... */}\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  );\n\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\n// export default class Header extends Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">Of</span>\n//             <span className=\"the\">The</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nexport default class Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name} {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddFishForm extends Component {\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">Add Fish</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button className=\"github\" onClick={()=> props.authenticate('Github')}>\n            Login with Github\n        </button>\n        <button className=\"facebook\" onClick={()=> props.authenticate('Facebook')}>\n            Login with Facebook\n        </button>\n        <button className=\"twitter\" onClick={()=> props.authenticate('Twitter')}>\n            Login with Twitter\n        </button>\n    </nav> \n\n)\n\nLogin.propTypes ={\n    authenticate: PropTypes.func.isRequired\n} \n\nexport default Login","import Rebase from 're-base'; \nimport firebase from \"firebase\"\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCA5OGAZ2H4aC5M3AXax0XaWoqeuOdldiE\",\n    authDomain: \"catch-of-the-day-ozzie.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-ozzie.firebaseio.com\",\n})\n\n\nconst base = Rebase.createClass(firebaseApp.database())\n\nexport { firebaseApp }\n\nexport default base","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nexport default class Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n    console.log(authData);\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>;\n\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the Owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nexport default class Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n  render() {\n    const { image, name, desc, price, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={image} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    const fishes = { ...this.state.fishes };\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  };\n  deleteFish = key => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    });\n  };\n\n  addToOrder = key => {\n    // 1. take a copt of state\n    const order = { ...this.state.order };\n\n    // 2. Either add to the order or update the number in order\n    order[key] = order[key] + 1 || 1;\n    // 3. call setstate to update state\n    this.setState({ order: order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copt of state\n    const order = { ...this.state.order };\n\n    // 2. Either add to the order or update the number in order\n    delete order[key];\n    // 3. call setstate to update state\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Ozzie's Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport NotFound from './NotFound'\nimport App from './App'\n\nconst Router = () => {\n\n  return (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n\n\n    </Switch>\n  </BrowserRouter>)\n  \n};\n  \nexport default Router;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport Router from \"./components/Router\"\nimport './css/style.css'\n\n\n\nrender(<Router />, document.querySelector('#main'))"],"sourceRoot":""}